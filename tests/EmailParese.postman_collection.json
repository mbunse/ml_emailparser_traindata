{
	"info": {
		"_postman_id": "34424a1f-4d48-4171-9e63-424aa1e2bc24",
		"name": "EmailParese",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Documents",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "19ba8d56-da56-423e-9448-e0a194316ecc",
						"exec": [
							"var mastKey = postman.getEnvironmentVariable(\"DBMaterKey\");",
							"console.log(\"mastKey = \" + mastKey);",
							"",
							"var today=new Date();",
							"var UTCstring = today.toUTCString();",
							"postman.setEnvironmentVariable(\"RFC1123time\", UTCstring);",
							"",
							"var url = request.url.trim();",
							"console.log(\"request url = \" + url);",
							"",
							"var strippedurl = url.replace(new RegExp('^https?://[^/]+/'), '/')",
							"console.log(\"stripped url = \" + strippedurl);",
							"",
							"var strippedparts = strippedurl.split(\"/\");",
							"var truestrippedcount = (strippedparts.length - 1);",
							"console.log(\"truestrippedcount = \" + truestrippedcount);",
							"",
							"var resourceId = \"\";",
							"var resType = \"\";",
							"",
							"//its odd -> resource request",
							"if (truestrippedcount % 2) {",
							"    console.log(\"resource request\");",
							"    ",
							"    //resource type is last part of url",
							"    resType = strippedparts[truestrippedcount];",
							"    console.log(\"resType = \" + resType);",
							"    ",
							"    if (truestrippedcount > 1) {",
							"        //get resource id",
							"        var lastPart = strippedurl.lastIndexOf(\"/\");",
							"        resourceId = strippedurl.substring(1, lastPart);",
							"        console.log(\"resourceId = \" + resourceId);",
							"    }",
							"}",
							"//item request",
							"else {",
							"    console.log(\"even\");",
							"    ",
							"    resType = strippedparts[truestrippedcount - 1];",
							"    console.log(\"resType = \" + resType);",
							"    ",
							"    strippedurl = strippedurl.substring(1);",
							"    console.log(\"strippedurl = \" + strippedurl);",
							"    ",
							"    resourceId = strippedurl;",
							"    console.log(\"resourceId = \" + resourceId);",
							"}",
							"",
							"var verb = request.method.toLowerCase();",
							"",
							"var date = UTCstring.toLowerCase();",
							"",
							"var key = CryptoJS.enc.Base64.parse(mastKey);",
							"console.log(\"key = \" + key);",
							"var text = (verb || \"\").toLowerCase() + \"\\n\" +   ",
							"               (resType || \"\").toLowerCase() + \"\\n\" +   ",
							"               (resourceId || \"\") + \"\\n\" +   ",
							"               date.toLowerCase() + \"\\n\" +   ",
							"               \"\" + \"\\n\";",
							"var signature = CryptoJS.HmacSHA256(text, key);",
							"console.log(\"signature = \" + signature);",
							"",
							"var base64Bits = CryptoJS.enc.Base64.stringify(signature);",
							"console.log(\"base64Bits = \" + base64Bits);",
							"",
							"var MasterToken = \"master\";",
							"var TokenVersion = \"1.0\";",
							"var accessToken = encodeURIComponent(\"type=\" + MasterToken + \"&ver=\" + TokenVersion + \"&sig=\" + base64Bits);",
							"postman.setEnvironmentVariable(\"accessToken\", accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{accessToken}}",
						"type": "text"
					},
					{
						"key": "x-ms-version",
						"value": "2017-02-22",
						"type": "text"
					},
					{
						"key": "x-ms-date",
						"value": "{{RFC1123time}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{DBHostname}}/dbs/emailparser/colls/mails/docs",
					"protocol": "https",
					"host": [
						"{{DBHostname}}"
					],
					"path": [
						"dbs",
						"emailparser",
						"colls",
						"mails",
						"docs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Document",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "19ba8d56-da56-423e-9448-e0a194316ecc",
						"exec": [
							"var mastKey = postman.getEnvironmentVariable(\"DBMaterKey\");",
							"console.log(\"mastKey = \" + mastKey);",
							"",
							"var today=new Date();",
							"var UTCstring = today.toUTCString();",
							"postman.setEnvironmentVariable(\"RFC1123time\", UTCstring);",
							"",
							"var url = request.url.trim();",
							"console.log(\"request url = \" + url);",
							"",
							"var strippedurl = url.replace(new RegExp('^https?://[^/]+/'), '/')",
							"console.log(\"stripped url = \" + strippedurl);",
							"",
							"var strippedparts = strippedurl.split(\"/\");",
							"var truestrippedcount = (strippedparts.length - 1);",
							"console.log(\"truestrippedcount = \" + truestrippedcount);",
							"",
							"var resourceId = \"\";",
							"var resType = \"\";",
							"",
							"//its odd -> resource request",
							"if (truestrippedcount % 2) {",
							"    console.log(\"resource request\");",
							"    ",
							"    //resource type is last part of url",
							"    resType = strippedparts[truestrippedcount];",
							"    console.log(\"resType = \" + resType);",
							"    ",
							"    if (truestrippedcount > 1) {",
							"        //get resource id",
							"        var lastPart = strippedurl.lastIndexOf(\"/\");",
							"        resourceId = strippedurl.substring(1, lastPart);",
							"        console.log(\"resourceId = \" + resourceId);",
							"    }",
							"}",
							"//item request",
							"else {",
							"    console.log(\"even\");",
							"    ",
							"    resType = strippedparts[truestrippedcount - 1];",
							"    console.log(\"resType = \" + resType);",
							"    ",
							"    strippedurl = strippedurl.substring(1);",
							"    console.log(\"strippedurl = \" + strippedurl);",
							"    ",
							"    resourceId = strippedurl;",
							"    console.log(\"resourceId = \" + resourceId);",
							"}",
							"",
							"var verb = request.method.toLowerCase();",
							"",
							"var date = UTCstring.toLowerCase();",
							"",
							"var key = CryptoJS.enc.Base64.parse(mastKey);",
							"console.log(\"key = \" + key);",
							"var text = (verb || \"\").toLowerCase() + \"\\n\" +   ",
							"               (resType || \"\").toLowerCase() + \"\\n\" +   ",
							"               (resourceId || \"\") + \"\\n\" +   ",
							"               date.toLowerCase() + \"\\n\" +   ",
							"               \"\" + \"\\n\";",
							"var signature = CryptoJS.HmacSHA256(text, key);",
							"console.log(\"signature = \" + signature);",
							"",
							"var base64Bits = CryptoJS.enc.Base64.stringify(signature);",
							"console.log(\"base64Bits = \" + base64Bits);",
							"",
							"var MasterToken = \"master\";",
							"var TokenVersion = \"1.0\";",
							"var accessToken = encodeURIComponent(\"type=\" + MasterToken + \"&ver=\" + TokenVersion + \"&sig=\" + base64Bits);",
							"postman.setEnvironmentVariable(\"accessToken\", accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{accessToken}}"
					},
					{
						"key": "x-ms-version",
						"type": "text",
						"value": "2017-02-22"
					},
					{
						"key": "x-ms-date",
						"type": "text",
						"value": "{{RFC1123time}}"
					},
					{
						"key": "x-ms-documentdb-is-upsert",
						"type": "text",
						"value": "true"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n  \"id\": \"testmail\",\r\n  \"eml\": \"test\"\r\n}"
				},
				"url": {
					"raw": "https://{{DBHostname}}/dbs/emailparser/colls/mails/docs",
					"protocol": "https",
					"host": [
						"{{DBHostname}}"
					],
					"path": [
						"dbs",
						"emailparser",
						"colls",
						"mails",
						"docs"
					]
				}
			},
			"response": []
		}
	]
}